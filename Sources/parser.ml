type token =
  | DEFINE
  | DOMAIN
  | REQUIREMENTS
  | CONSTANTS
  | TYPES
  | FUNCTIONS
  | ACTION
  | DURATIVE_ACTION
  | PARAM
  | DURATION
  | AT
  | BEFORE
  | AFTER
  | START
  | END
  | OVER
  | ALL
  | SOMEWHERE
  | ANYWHERE
  | MIN_DUR
  | ASSIGN
  | INCREASE
  | DECREASE
  | CONSUME
  | PRODUCE
  | QUALITY
  | PREC
  | EFFECT
  | NOT
  | AND
  | TYPE
  | LP
  | RP
  | EQUAL
  | ADD
  | MULTIPLY
  | DIVIDE
  | LH
  | RH
  | INF
  | SUP
  | PROBLEM
  | PDOMAIN
  | OBJECTS
  | INIT
  | GOAL
  | METRIC
  | MINIMIZE
  | TOTALTIME
  | FORALL
  | WHEN
  | VAR of (string)
  | IDENT of (string)
  | REQUIREMENT of (string)
  | INTEGER of (int)
  | RATIONAL of (float)

open Parsing;;
let _ = parse_error;;
# 2 "Sources/parser.mly"

  let action_relative_end_time = ref (FunctionFormula.Number 1.0)

  let current_time_set = ref ((FunctionFormula.Number 0.0),(FunctionFormula.Number 0.0))

  let current_time_bound = ref (true,true)

  let ti_code = ref 0

  let ti_min_dur = ref 0.0

  let functions_value_list = ref []

  let parse_error s = Utils.eprint " Syntax error at line %i\n\n" !Lexer.line

  let symb_set = new SymbSet.t
  let attribute_spaces = new Typeset.attribute_space_set symb_set

  let domain = ref Domain.domain_void

  let constants_in_domain = ref []

  let create_domain name requirements operators =
    Lexer.line := 1 ;
    Utils.eprint "%s..... " name ;
    domain := new Domain.domain name requirements (Array.of_list operators) ;
    !domain

  let create_operator name params descr =
    symb_set#reset_var_table ;
    let (duration, quality, prec, eff) = descr in
    let parameters =  new Typeset.parameters params attribute_spaces in
      new Domain.operator (String.uppercase name) parameters duration quality prec eff

  let create_problem name domain_name objects init goal =
    Utils.eprint "%s..... " name ;
    if domain_name <> !domain#name then begin
      Utils.eprint "\n\nProblem %s not for domain %s !\n\n" name !domain#name ;
      exit 0 
    end ;
    new Domain.problem name !domain objects init goal symb_set attribute_spaces !functions_value_list

  let create_atom pred terms timeset =
    let pred = symb_set#create_predicate pred in
      if !Lexer.is_effect then pred#untype ;
      let timedata = ref (new Timedata.t timeset !ti_code) in
      (!timedata)#set_closed_left (fst !current_time_bound);
      (!timedata)#set_closed_right (snd !current_time_bound);
      (!timedata)#set_min_dur !ti_min_dur;
      new Atom.t pred (Array.of_list terms) !timedata timeset

  let create_preatom pred terms timeset =
    let pred = symb_set#create_predicate pred in
      if !Lexer.is_effect then pred#untype ;
      let timedata = ref (new Timedata.t timeset !ti_code) in
      (!timedata)#set_closed_left (fst !current_time_bound);
      (!timedata)#set_closed_right (snd !current_time_bound);
      (!timedata)#set_min_dur !ti_min_dur;
      (pred,(Array.of_list terms),!timedata)

  let create_typed_term_list variables pred =
    List.iter (fun t -> t#set_builtin_type (symb_set#create_predicate pred)) variables ;
    variables

  let set_action_relative_end_time dur =
    action_relative_end_time := dur ;
    dur

  let set_current_time_set timeset =
    current_time_set := timeset ;
    timeset

  let formula_time formulas time_set =
   List.map (fun p -> (p, time_set)) formulas

  let create_function name var_list =
   (name,var_list)

# 141 "Sources/parser.ml"
let yytransl_const = [|
  257 (* DEFINE *);
  258 (* DOMAIN *);
  259 (* REQUIREMENTS *);
  260 (* CONSTANTS *);
  261 (* TYPES *);
  262 (* FUNCTIONS *);
  263 (* ACTION *);
  264 (* DURATIVE_ACTION *);
  265 (* PARAM *);
  266 (* DURATION *);
  267 (* AT *);
  268 (* BEFORE *);
  269 (* AFTER *);
  270 (* START *);
  271 (* END *);
  272 (* OVER *);
  273 (* ALL *);
  274 (* SOMEWHERE *);
  275 (* ANYWHERE *);
  276 (* MIN_DUR *);
  277 (* ASSIGN *);
  278 (* INCREASE *);
  279 (* DECREASE *);
  280 (* CONSUME *);
  281 (* PRODUCE *);
  282 (* QUALITY *);
  283 (* PREC *);
  284 (* EFFECT *);
  285 (* NOT *);
  286 (* AND *);
  287 (* TYPE *);
  288 (* LP *);
  289 (* RP *);
  290 (* EQUAL *);
  291 (* ADD *);
  292 (* MULTIPLY *);
  293 (* DIVIDE *);
  294 (* LH *);
  295 (* RH *);
  296 (* INF *);
  297 (* SUP *);
  298 (* PROBLEM *);
  299 (* PDOMAIN *);
  300 (* OBJECTS *);
  301 (* INIT *);
  302 (* GOAL *);
  303 (* METRIC *);
  304 (* MINIMIZE *);
  305 (* TOTALTIME *);
  306 (* FORALL *);
  307 (* WHEN *);
    0|]

let yytransl_block = [|
  308 (* VAR *);
  309 (* IDENT *);
  310 (* REQUIREMENT *);
  311 (* INTEGER *);
  312 (* RATIONAL *);
    0|]

let yylhs = "\255\255\
\001\000\001\000\001\000\001\000\001\000\001\000\001\000\003\000\
\003\000\006\000\006\000\006\000\008\000\008\000\008\000\010\000\
\010\000\010\000\010\000\014\000\014\000\015\000\017\000\012\000\
\012\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
\013\000\002\000\002\000\002\000\020\000\020\000\021\000\021\000\
\025\000\025\000\016\000\016\000\016\000\016\000\016\000\016\000\
\016\000\016\000\031\000\031\000\031\000\031\000\031\000\031\000\
\031\000\031\000\026\000\026\000\026\000\027\000\027\000\029\000\
\029\000\023\000\023\000\032\000\032\000\024\000\024\000\024\000\
\024\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
\030\000\030\000\030\000\033\000\033\000\033\000\036\000\037\000\
\028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
\038\000\038\000\038\000\038\000\038\000\039\000\039\000\039\000\
\039\000\039\000\004\000\004\000\041\000\041\000\040\000\040\000\
\005\000\005\000\042\000\042\000\009\000\009\000\044\000\044\000\
\007\000\007\000\035\000\035\000\046\000\046\000\034\000\034\000\
\011\000\011\000\022\000\022\000\047\000\047\000\047\000\045\000\
\043\000\043\000\019\000\019\000\000\000\000\000"

let yylen = "\002\000\
\016\000\019\000\013\000\016\000\010\000\010\000\007\000\001\000\
\002\000\001\000\004\000\004\000\006\000\006\000\003\000\003\000\
\002\000\002\000\001\000\004\000\002\000\001\000\001\000\002\000\
\006\000\001\000\005\000\005\000\005\000\005\000\003\000\003\000\
\002\000\015\000\015\000\012\000\003\000\003\000\005\000\005\000\
\001\000\007\000\003\000\006\000\008\000\005\000\005\000\002\000\
\004\000\005\000\004\000\007\000\007\000\010\000\010\000\013\000\
\013\000\016\000\003\000\005\000\002\000\001\000\002\000\001\000\
\002\000\001\000\003\000\001\000\002\000\001\000\003\000\002\000\
\007\000\002\000\002\000\002\000\006\000\006\000\005\000\005\000\
\005\000\005\000\005\000\005\000\004\000\004\000\005\000\005\000\
\002\000\002\000\002\000\002\000\002\000\002\000\004\000\004\000\
\001\000\001\000\001\000\005\000\005\000\001\000\004\000\004\000\
\004\000\004\000\001\000\003\000\001\000\002\000\001\000\002\000\
\003\000\003\000\001\000\002\000\003\000\003\000\001\000\002\000\
\001\000\003\000\002\000\002\000\002\000\002\000\001\000\002\000\
\001\000\002\000\001\000\002\000\001\000\001\000\001\000\001\000\
\001\000\001\000\001\000\001\000\002\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\000\000\000\000\141\000\000\000\142\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\010\000\007\000\000\000\000\000\000\000\000\000\
\000\000\000\000\008\000\000\000\000\000\109\000\111\000\000\000\
\000\000\107\000\000\000\000\000\000\000\000\000\000\000\009\000\
\000\000\005\000\112\000\110\000\000\000\006\000\000\000\000\000\
\000\000\000\000\022\000\023\000\000\000\000\000\000\000\019\000\
\000\000\000\000\011\000\012\000\000\000\000\000\108\000\000\000\
\000\000\139\000\140\000\024\000\026\000\033\000\015\000\000\000\
\017\000\018\000\000\000\000\000\021\000\000\000\000\000\000\000\
\119\000\129\000\136\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\048\000\000\000\000\000\000\000\000\000\036\000\
\000\000\003\000\000\000\000\000\000\000\130\000\120\000\000\000\
\000\000\000\000\000\000\000\000\000\000\031\000\032\000\097\000\
\098\000\000\000\127\000\133\000\134\000\000\000\099\000\076\000\
\089\000\000\000\090\000\091\000\102\000\000\000\000\000\092\000\
\093\000\094\000\000\000\000\000\000\000\000\000\000\000\000\000\
\062\000\000\000\043\000\000\000\135\000\075\000\000\000\000\000\
\000\000\000\000\000\000\074\000\000\000\020\000\115\000\131\000\
\137\000\138\000\000\000\000\000\000\000\000\000\000\000\066\000\
\037\000\038\000\000\000\000\000\000\000\000\000\013\000\014\000\
\117\000\118\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\128\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\063\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\049\000\000\000\
\000\000\000\000\000\000\000\000\000\000\132\000\116\000\000\000\
\000\000\000\000\000\000\070\000\072\000\000\000\000\000\000\000\
\000\000\000\000\000\000\121\000\000\000\028\000\025\000\027\000\
\029\000\030\000\000\000\000\000\000\000\000\000\095\000\123\000\
\124\000\000\000\000\000\000\000\046\000\000\000\064\000\000\000\
\000\000\096\000\000\000\000\000\000\000\050\000\000\000\000\000\
\000\000\000\000\047\000\034\000\035\000\113\000\114\000\000\000\
\000\000\000\000\000\000\067\000\071\000\000\000\000\000\000\000\
\048\000\000\000\000\000\000\000\001\000\000\000\004\000\000\000\
\000\000\104\000\103\000\106\000\105\000\081\000\082\000\083\000\
\000\000\000\000\000\000\000\000\065\000\044\000\079\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\085\000\086\000\000\000\000\000\062\000\
\059\000\000\000\041\000\039\000\040\000\000\000\122\000\101\000\
\100\000\000\000\000\000\061\000\077\000\078\000\000\000\000\000\
\000\000\000\000\051\000\000\000\000\000\000\000\000\000\084\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\045\000\000\000\000\000\000\000\046\000\000\000\002\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\073\000\088\000\087\000\000\000\060\000\000\000\053\000\000\000\
\000\000\052\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\042\000\054\000\000\000\000\000\
\055\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\057\000\056\000\000\000\000\000\058\000"

let yydgoto = "\003\000\
\005\000\007\000\029\000\033\000\179\000\020\000\245\000\037\000\
\084\000\053\000\085\000\054\000\055\000\056\000\057\000\162\000\
\058\000\068\000\143\000\079\000\120\000\180\000\185\000\029\001\
\076\001\008\001\163\000\114\000\073\001\115\000\223\000\000\000\
\187\000\144\000\208\000\026\001\027\001\145\000\152\000\034\000\
\035\000\181\000\242\000\086\000\087\000\000\000\146\000"

let yysindex = "\029\000\
\006\255\022\255\000\000\102\255\000\000\115\255\000\000\031\255\
\076\255\119\255\126\255\137\255\152\255\138\255\146\255\130\255\
\188\255\041\000\000\000\000\000\164\255\023\255\151\255\171\255\
\171\255\192\255\000\000\023\255\195\255\000\000\000\000\151\255\
\222\255\000\000\210\255\216\255\222\255\222\255\198\255\000\000\
\244\255\000\000\000\000\000\000\207\255\000\000\151\255\001\000\
\020\255\193\255\000\000\000\000\009\000\172\255\233\255\000\000\
\027\000\027\000\000\000\000\000\034\000\151\255\000\000\008\255\
\172\000\000\000\000\000\000\000\000\000\000\000\000\000\233\255\
\000\000\000\000\135\255\040\000\000\000\226\255\052\000\241\255\
\000\000\000\000\000\000\161\000\161\000\021\000\008\255\062\255\
\036\000\062\255\062\255\062\255\008\255\000\000\162\000\018\255\
\018\255\028\255\028\255\028\255\252\255\070\000\074\000\076\000\
\084\000\249\255\079\000\097\255\106\255\091\000\095\000\105\000\
\097\255\109\000\000\000\027\000\015\255\039\000\102\000\000\000\
\103\255\000\000\119\000\129\000\081\255\000\000\000\000\182\255\
\062\255\062\255\062\255\062\255\062\255\000\000\000\000\000\000\
\000\000\175\255\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\097\255\000\000\000\000\000\000\018\255\018\255\000\000\
\000\000\000\000\131\000\127\000\127\000\127\000\179\000\135\255\
\000\000\059\000\000\000\188\000\000\000\000\000\127\000\178\000\
\180\000\041\255\016\000\000\000\078\000\000\000\000\000\000\000\
\000\000\000\000\184\000\184\000\158\000\015\255\042\000\000\000\
\000\000\000\000\090\000\192\000\084\255\097\000\000\000\000\000\
\000\000\000\000\041\255\194\000\198\000\200\000\201\000\202\000\
\018\255\018\255\000\000\018\255\018\255\028\255\008\255\181\000\
\182\000\183\000\097\255\206\000\111\000\000\000\028\255\185\000\
\127\000\127\000\027\000\211\000\212\000\213\000\000\000\214\000\
\209\000\203\000\052\000\052\000\073\255\000\000\000\000\128\255\
\215\000\039\000\042\000\000\000\000\000\246\255\216\000\217\000\
\123\000\084\255\127\000\000\000\222\255\000\000\000\000\000\000\
\000\000\000\000\018\255\018\255\240\255\072\000\000\000\000\000\
\000\000\218\000\219\000\220\000\000\000\200\255\000\000\132\000\
\221\000\000\000\222\000\204\000\205\000\000\000\179\000\092\000\
\113\000\179\000\000\000\000\000\000\000\000\000\000\000\179\000\
\056\000\223\000\224\000\000\000\000\000\090\000\226\000\136\000\
\000\000\150\000\150\000\231\255\000\000\097\000\000\000\228\000\
\229\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\231\000\132\000\209\000\064\000\000\000\000\000\000\000\232\000\
\233\000\234\000\236\000\237\000\239\000\240\000\241\000\252\255\
\243\000\244\000\245\000\000\000\000\000\179\000\246\255\000\000\
\000\000\225\000\000\000\000\000\000\000\097\000\000\000\000\000\
\000\000\179\000\247\000\000\000\000\000\000\000\248\000\179\000\
\249\000\179\000\000\000\250\000\251\000\179\000\179\000\000\000\
\252\000\238\000\222\255\254\000\179\000\117\000\255\000\210\000\
\000\001\000\000\090\000\001\001\002\001\000\000\004\001\000\000\
\250\000\005\001\007\001\008\001\009\001\018\255\011\001\012\001\
\000\000\000\000\000\000\253\000\000\000\179\000\000\000\015\001\
\138\000\000\000\016\001\018\001\210\000\020\001\021\001\022\001\
\023\001\025\001\179\000\026\001\000\000\000\000\152\000\027\001\
\000\000\029\001\030\001\031\001\179\000\032\001\033\001\034\001\
\000\000\000\000\035\001\036\001\000\000"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\141\255\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\038\001\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\039\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000"

let yygindex = "\000\000\
\000\000\000\000\236\001\125\000\088\255\227\255\243\254\244\001\
\178\255\100\001\176\255\000\000\223\001\047\000\000\000\204\255\
\206\001\223\255\208\255\017\001\227\000\111\001\062\001\140\255\
\013\001\112\001\144\001\099\255\061\255\107\255\000\000\000\000\
\000\000\159\255\118\255\000\000\000\000\196\255\184\255\021\002\
\026\002\109\255\162\255\181\255\148\255\000\000\000\000"

let yytablesize = 583
let yytable = "\042\000\
\069\000\186\000\213\000\046\000\076\000\077\000\126\000\059\000\
\060\000\212\000\166\000\127\000\135\000\221\000\134\000\172\000\
\195\000\009\001\209\000\210\000\241\000\222\000\182\000\225\000\
\079\001\233\000\153\000\154\000\216\000\001\000\002\000\136\000\
\137\000\234\000\231\000\147\000\148\000\004\000\081\000\069\000\
\082\000\069\000\069\000\069\000\149\000\175\000\194\000\176\000\
\203\000\138\000\122\000\065\000\155\000\006\000\129\000\027\000\
\131\000\132\000\133\000\083\000\023\001\195\000\010\000\174\000\
\099\001\150\000\151\000\177\000\053\001\178\000\237\000\081\000\
\066\000\067\000\066\000\067\000\028\000\233\000\012\001\013\001\
\069\000\069\000\069\000\069\000\069\000\030\001\195\000\182\000\
\033\001\204\000\205\000\219\000\083\000\128\000\231\000\196\000\
\197\000\198\000\199\000\200\000\073\000\074\000\008\000\175\000\
\038\001\022\001\189\000\011\000\190\000\024\000\025\000\081\000\
\051\001\193\000\175\000\009\000\066\000\067\000\094\000\127\000\
\012\000\058\001\060\001\062\001\063\001\177\000\001\001\178\000\
\000\001\139\000\064\001\067\001\083\000\255\000\166\000\239\000\
\177\000\167\000\178\000\168\000\251\000\252\000\010\001\253\000\
\254\000\095\000\096\000\097\000\140\000\141\000\098\000\165\000\
\099\000\100\000\101\000\102\000\103\000\104\000\084\001\024\001\
\139\000\018\000\019\000\105\000\106\000\107\000\014\001\013\000\
\108\000\213\000\016\000\063\000\139\000\135\000\109\000\110\000\
\097\001\033\001\017\000\140\000\141\000\030\000\165\000\031\000\
\111\000\112\000\080\000\113\000\100\001\014\000\040\001\041\001\
\135\000\135\000\103\001\135\000\105\001\050\000\051\000\052\000\
\108\001\109\001\119\001\032\000\015\000\201\000\026\000\114\001\
\116\001\202\000\211\000\037\001\088\000\024\000\025\000\039\001\
\090\000\091\000\092\000\021\000\102\000\103\000\104\000\036\000\
\048\000\049\000\041\000\019\000\049\001\050\001\061\000\138\001\
\132\001\108\000\093\000\135\001\078\001\024\000\025\000\109\000\
\110\000\050\000\051\000\052\000\039\000\144\001\121\001\070\000\
\062\000\147\001\024\000\025\000\113\000\045\000\019\000\152\001\
\095\000\096\000\097\000\051\000\052\000\098\000\047\000\099\000\
\100\000\101\000\102\000\103\000\104\000\117\000\118\000\093\001\
\121\000\019\000\031\001\032\001\107\000\042\001\043\001\108\000\
\160\000\161\000\095\000\096\000\097\000\109\000\110\000\098\000\
\064\000\099\000\100\000\101\000\102\000\103\000\104\000\111\000\
\112\000\071\000\113\000\022\000\220\000\023\000\107\000\024\000\
\025\000\108\000\066\000\067\000\095\000\096\000\097\000\109\000\
\110\000\098\000\075\000\099\000\100\000\101\000\102\000\103\000\
\104\000\078\000\211\000\052\000\113\000\112\001\183\000\184\000\
\107\000\125\000\211\000\232\000\102\000\103\000\104\000\065\001\
\066\001\109\000\110\000\119\000\102\000\103\000\104\000\130\000\
\211\000\108\000\075\000\161\000\083\001\050\001\113\000\109\000\
\110\000\108\000\102\000\103\000\104\000\156\000\211\000\109\000\
\110\000\157\000\224\000\158\000\113\000\044\001\045\001\108\000\
\102\000\103\000\104\000\159\000\113\000\109\000\110\000\164\000\
\059\001\235\000\236\000\211\000\169\000\108\000\170\000\211\000\
\243\000\244\000\113\000\109\000\110\000\102\000\103\000\104\000\
\171\000\102\000\103\000\104\000\173\000\061\001\006\001\007\001\
\113\000\115\001\108\000\188\000\211\000\206\000\108\000\191\000\
\109\000\110\000\036\001\019\000\109\000\110\000\102\000\103\000\
\104\000\192\000\211\000\052\001\007\001\113\000\134\001\071\001\
\072\001\113\000\049\000\108\000\102\000\103\000\104\000\136\000\
\137\000\109\000\110\000\207\000\146\001\074\001\075\001\123\000\
\124\000\108\000\050\000\051\000\052\000\211\000\113\000\109\000\
\110\000\138\000\139\000\227\000\228\000\020\001\021\001\102\000\
\103\000\104\000\088\000\215\000\113\000\089\000\090\000\091\000\
\092\000\217\000\229\000\218\000\108\000\140\000\141\000\226\000\
\142\000\067\000\109\000\110\000\118\001\096\000\097\000\238\000\
\093\000\098\000\246\000\099\000\100\000\101\000\247\000\113\000\
\248\000\249\000\250\000\002\001\003\001\004\001\005\001\011\001\
\107\000\019\001\015\001\016\001\017\001\018\001\025\001\118\000\
\034\001\035\001\046\001\047\001\048\001\054\001\055\001\068\001\
\069\001\070\001\056\001\057\001\080\001\081\001\082\001\040\000\
\085\001\086\001\087\001\088\001\038\000\089\001\090\001\098\001\
\091\001\092\001\094\001\095\001\072\000\096\001\101\001\102\001\
\104\001\116\000\106\001\107\001\110\001\111\001\113\001\117\001\
\120\001\122\001\123\001\124\001\230\000\125\001\126\001\028\001\
\127\001\128\001\129\001\240\000\130\001\131\001\133\001\077\001\
\136\001\214\000\137\001\139\001\043\000\140\001\141\001\142\001\
\143\001\044\000\145\001\148\001\149\001\000\000\150\001\151\001\
\153\001\154\001\155\001\156\001\157\001\061\000\060\000"

let yycheck = "\029\000\
\049\000\118\000\160\000\033\000\057\000\058\000\087\000\037\000\
\038\000\159\000\108\000\087\000\093\000\171\000\093\000\113\000\
\125\000\213\000\157\000\158\000\189\000\171\000\117\000\173\000\
\038\001\183\000\099\000\100\000\167\000\001\000\002\000\014\001\
\015\001\183\000\182\000\096\000\097\000\032\001\031\001\088\000\
\033\001\090\000\091\000\092\000\017\001\031\001\125\000\033\001\
\146\000\032\001\080\000\032\001\101\000\032\001\088\000\033\001\
\090\000\091\000\092\000\052\001\229\000\170\000\032\001\116\000\
\078\001\038\001\039\001\053\001\008\001\055\001\187\000\031\001\
\055\001\056\001\055\001\056\001\054\001\235\000\217\000\218\000\
\129\000\130\000\131\000\132\000\133\000\235\000\195\000\182\000\
\238\000\150\000\151\000\170\000\052\001\032\001\242\000\129\000\
\130\000\131\000\132\000\133\000\054\000\055\000\001\001\031\001\
\243\000\033\001\004\001\032\001\006\001\007\001\008\001\031\001\
\006\001\033\001\031\001\001\001\055\001\056\001\072\000\195\000\
\002\001\015\001\016\001\017\001\018\001\053\001\207\000\055\001\
\207\000\033\001\024\001\025\001\052\001\206\000\232\000\188\000\
\053\001\032\001\055\001\034\001\201\000\202\000\215\000\204\000\
\205\000\011\001\012\001\013\001\052\001\053\001\016\001\055\001\
\018\001\019\001\020\001\021\001\022\001\023\001\052\001\032\001\
\033\001\032\001\033\001\029\001\030\001\031\001\219\000\042\001\
\034\001\071\001\033\001\047\000\032\001\033\001\040\001\041\001\
\070\001\071\001\033\001\052\001\053\001\031\001\055\001\033\001\
\050\001\051\001\062\000\053\001\082\001\053\001\251\000\252\000\
\052\001\053\001\088\001\055\001\090\001\026\001\027\001\028\001\
\094\001\095\001\104\001\053\001\053\001\031\001\043\001\101\001\
\102\001\035\001\011\001\241\000\031\001\007\001\008\001\245\000\
\035\001\036\001\037\001\032\001\021\001\022\001\023\001\053\001\
\009\001\010\001\032\001\033\001\029\001\030\001\033\001\133\001\
\126\001\034\001\053\001\129\001\006\001\007\001\008\001\040\001\
\041\001\026\001\027\001\028\001\053\001\139\001\107\001\055\001\
\005\001\143\001\007\001\008\001\053\001\032\001\033\001\149\001\
\011\001\012\001\013\001\027\001\028\001\016\001\053\001\018\001\
\019\001\020\001\021\001\022\001\023\001\044\001\045\001\064\001\
\032\001\033\001\029\001\030\001\031\001\038\001\039\001\034\001\
\032\001\033\001\011\001\012\001\013\001\040\001\041\001\016\001\
\032\001\018\001\019\001\020\001\021\001\022\001\023\001\050\001\
\051\001\033\001\053\001\003\001\029\001\005\001\031\001\007\001\
\008\001\034\001\055\001\056\001\011\001\012\001\013\001\040\001\
\041\001\016\001\032\001\018\001\019\001\020\001\021\001\022\001\
\023\001\032\001\011\001\028\001\053\001\099\001\032\001\033\001\
\031\001\053\001\011\001\034\001\021\001\022\001\023\001\024\001\
\025\001\040\001\041\001\032\001\021\001\022\001\023\001\052\001\
\011\001\034\001\032\001\033\001\029\001\030\001\053\001\040\001\
\041\001\034\001\021\001\022\001\023\001\032\001\011\001\040\001\
\041\001\032\001\029\001\032\001\053\001\038\001\039\001\034\001\
\021\001\022\001\023\001\032\001\053\001\040\001\041\001\041\001\
\029\001\032\001\033\001\011\001\034\001\034\001\032\001\011\001\
\032\001\033\001\053\001\040\001\041\001\021\001\022\001\023\001\
\032\001\021\001\022\001\023\001\032\001\029\001\032\001\033\001\
\053\001\029\001\034\001\046\001\011\001\019\001\034\001\033\001\
\040\001\041\001\032\001\033\001\040\001\041\001\021\001\022\001\
\023\001\033\001\011\001\032\001\033\001\053\001\029\001\032\001\
\033\001\053\001\010\001\034\001\021\001\022\001\023\001\014\001\
\015\001\040\001\041\001\053\001\029\001\032\001\033\001\084\000\
\085\000\034\001\026\001\027\001\028\001\011\001\053\001\040\001\
\041\001\032\001\033\001\179\000\180\000\227\000\228\000\021\001\
\022\001\023\001\031\001\016\001\053\001\034\001\035\001\036\001\
\037\001\032\001\053\001\032\001\034\001\052\001\053\001\032\001\
\055\001\056\001\040\001\041\001\011\001\012\001\013\001\032\001\
\053\001\016\001\033\001\018\001\019\001\020\001\033\001\053\001\
\033\001\033\001\033\001\055\001\055\001\055\001\033\001\055\001\
\031\001\033\001\032\001\032\001\032\001\032\001\032\001\045\001\
\033\001\033\001\033\001\033\001\033\001\033\001\033\001\033\001\
\033\001\032\001\055\001\055\001\033\001\033\001\032\001\028\000\
\033\001\033\001\033\001\032\001\025\000\033\001\032\001\047\001\
\033\001\033\001\032\001\032\001\054\000\033\001\032\001\032\001\
\032\001\076\000\033\001\033\001\033\001\048\001\033\001\033\001\
\033\001\033\001\033\001\032\001\182\000\033\001\032\001\234\000\
\033\001\033\001\032\001\188\000\033\001\049\001\032\001\035\001\
\033\001\162\000\033\001\032\001\032\000\033\001\033\001\033\001\
\032\001\032\000\033\001\033\001\032\001\255\255\033\001\033\001\
\033\001\033\001\033\001\033\001\033\001\032\001\032\001"

let yynames_const = "\
  DEFINE\000\
  DOMAIN\000\
  REQUIREMENTS\000\
  CONSTANTS\000\
  TYPES\000\
  FUNCTIONS\000\
  ACTION\000\
  DURATIVE_ACTION\000\
  PARAM\000\
  DURATION\000\
  AT\000\
  BEFORE\000\
  AFTER\000\
  START\000\
  END\000\
  OVER\000\
  ALL\000\
  SOMEWHERE\000\
  ANYWHERE\000\
  MIN_DUR\000\
  ASSIGN\000\
  INCREASE\000\
  DECREASE\000\
  CONSUME\000\
  PRODUCE\000\
  QUALITY\000\
  PREC\000\
  EFFECT\000\
  NOT\000\
  AND\000\
  TYPE\000\
  LP\000\
  RP\000\
  EQUAL\000\
  ADD\000\
  MULTIPLY\000\
  DIVIDE\000\
  LH\000\
  RH\000\
  INF\000\
  SUP\000\
  PROBLEM\000\
  PDOMAIN\000\
  OBJECTS\000\
  INIT\000\
  GOAL\000\
  METRIC\000\
  MINIMIZE\000\
  TOTALTIME\000\
  FORALL\000\
  WHEN\000\
  "

let yynames_block = "\
  VAR\000\
  IDENT\000\
  REQUIREMENT\000\
  INTEGER\000\
  RATIONAL\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 11 : string) in
    let _9 = (Parsing.peek_val __caml_parser_env 7 : 'requirements) in
    let _12 = (Parsing.peek_val __caml_parser_env 4 : 'types) in
    let _15 = (Parsing.peek_val __caml_parser_env 1 : 'typed_constant_list) in
    let _16 = (Parsing.peek_val __caml_parser_env 0 : 'operator_list) in
    Obj.repr(
# 95 "Sources/parser.mly"
                                                                                                                          ( constants_in_domain := _15; create_domain _5 _9 _16 )
# 646 "Sources/parser.ml"
               : Domain.domain))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 14 : string) in
    let _9 = (Parsing.peek_val __caml_parser_env 10 : 'requirements) in
    let _12 = (Parsing.peek_val __caml_parser_env 7 : 'types) in
    let _15 = (Parsing.peek_val __caml_parser_env 4 : 'typed_constant_list) in
    let _18 = (Parsing.peek_val __caml_parser_env 1 : 'functions_list) in
    let _19 = (Parsing.peek_val __caml_parser_env 0 : 'operator_list) in
    Obj.repr(
# 96 "Sources/parser.mly"
                                                                                                                                                        ( constants_in_domain := _15; create_domain _5 _9 _19 )
# 658 "Sources/parser.ml"
               : Domain.domain))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 8 : string) in
    let _9 = (Parsing.peek_val __caml_parser_env 4 : 'requirements) in
    let _12 = (Parsing.peek_val __caml_parser_env 1 : 'types) in
    let _13 = (Parsing.peek_val __caml_parser_env 0 : 'operator_list) in
    Obj.repr(
# 98 "Sources/parser.mly"
                                                                                         ( create_domain _5 _9 _13 )
# 668 "Sources/parser.ml"
               : Domain.domain))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 11 : string) in
    let _9 = (Parsing.peek_val __caml_parser_env 7 : 'requirements) in
    let _12 = (Parsing.peek_val __caml_parser_env 4 : 'types) in
    let _15 = (Parsing.peek_val __caml_parser_env 1 : 'functions_list) in
    let _16 = (Parsing.peek_val __caml_parser_env 0 : 'operator_list) in
    Obj.repr(
# 99 "Sources/parser.mly"
                                                                                                                       ( create_domain _5 _9 _16 )
# 679 "Sources/parser.ml"
               : Domain.domain))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _9 = (Parsing.peek_val __caml_parser_env 1 : 'requirements) in
    let _10 = (Parsing.peek_val __caml_parser_env 0 : 'operator_list) in
    Obj.repr(
# 101 "Sources/parser.mly"
                                                                          ( create_domain _5 _9 _10 )
# 688 "Sources/parser.ml"
               : Domain.domain))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _9 = (Parsing.peek_val __caml_parser_env 1 : 'types) in
    let _10 = (Parsing.peek_val __caml_parser_env 0 : 'operator_list) in
    Obj.repr(
# 102 "Sources/parser.mly"
                                                            ( create_domain _5 [] _10 )
# 697 "Sources/parser.ml"
               : Domain.domain))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _7 = (Parsing.peek_val __caml_parser_env 0 : 'operator_list) in
    Obj.repr(
# 103 "Sources/parser.mly"
                                             ( create_domain _5 [] _7 )
# 705 "Sources/parser.ml"
               : Domain.domain))
; (fun __caml_parser_env ->
    Obj.repr(
# 106 "Sources/parser.mly"
     ( [] )
# 711 "Sources/parser.ml"
               : 'requirements))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'requirements) in
    Obj.repr(
# 107 "Sources/parser.mly"
                           ( _1 :: _2 )
# 719 "Sources/parser.ml"
               : 'requirements))
; (fun __caml_parser_env ->
    Obj.repr(
# 110 "Sources/parser.mly"
     ( [] )
# 725 "Sources/parser.ml"
               : 'operator_list))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'operator) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'operator_list) in
    Obj.repr(
# 111 "Sources/parser.mly"
                                   ( _3 :: _4 )
# 733 "Sources/parser.ml"
               : 'operator_list))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'operator) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'operator_list) in
    Obj.repr(
# 112 "Sources/parser.mly"
                                            ( _3 :: _4 )
# 741 "Sources/parser.ml"
               : 'operator_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'typed_variable_list) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'operator_strips) in
    Obj.repr(
# 116 "Sources/parser.mly"
                                                        ( set_action_relative_end_time (FunctionFormula.Number 1.0); set_current_time_set ((FunctionFormula.Number 0.0),(FunctionFormula.Number 0.0)); create_operator _1 _4 _5 )
# 750 "Sources/parser.ml"
               : 'operator))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'variable_list) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'operator_strips) in
    Obj.repr(
# 117 "Sources/parser.mly"
                                                  ( set_action_relative_end_time (FunctionFormula.Number 1.0); set_current_time_set ((FunctionFormula.Number 0.0),(FunctionFormula.Number 0.0)); create_operator _1 _4 _5 )
# 759 "Sources/parser.ml"
               : 'operator))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'operator_strips) in
    Obj.repr(
# 118 "Sources/parser.mly"
                           ( set_action_relative_end_time (FunctionFormula.Number 1.0); set_current_time_set ((FunctionFormula.Number 0.0),(FunctionFormula.Number 0.0)); create_operator _1 [] _2 )
# 767 "Sources/parser.ml"
               : 'operator))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'duration) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'quality) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'operator_strips_cont) in
    Obj.repr(
# 121 "Sources/parser.mly"
                                        ( (_1, _2, fst _3, snd _3) )
# 776 "Sources/parser.ml"
               : 'operator_strips))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'duration) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'operator_strips_cont) in
    Obj.repr(
# 122 "Sources/parser.mly"
                                ( (_1, 0, fst _2, snd _2) )
# 784 "Sources/parser.ml"
               : 'operator_strips))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'quality) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'operator_strips_cont) in
    Obj.repr(
# 123 "Sources/parser.mly"
                               ( ((FunctionFormula.Number 1.0), _1, fst _2, snd _2) )
# 792 "Sources/parser.ml"
               : 'operator_strips))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'operator_strips_cont) in
    Obj.repr(
# 124 "Sources/parser.mly"
                       ( ((FunctionFormula.Number 1.0), 0, fst _1, snd _1) )
# 799 "Sources/parser.ml"
               : 'operator_strips))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : 'operator_strips_cont_prec) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'formula) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'operator_strips_cont_eff) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'formula) in
    Obj.repr(
# 127 "Sources/parser.mly"
                                                                     ( (_2, _4) )
# 809 "Sources/parser.ml"
               : 'operator_strips_cont))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'operator_strips_cont_eff) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'formula) in
    Obj.repr(
# 128 "Sources/parser.mly"
                                   ( (Formula.Top, _2) )
# 817 "Sources/parser.ml"
               : 'operator_strips_cont))
; (fun __caml_parser_env ->
    Obj.repr(
# 131 "Sources/parser.mly"
       ( current_time_bound := (true,false); ti_code := 0; set_current_time_set ((FunctionFormula.Number 0.0),(FunctionFormula.Number 1.0)) )
# 823 "Sources/parser.ml"
               : 'operator_strips_cont_prec))
; (fun __caml_parser_env ->
    Obj.repr(
# 134 "Sources/parser.mly"
         ( current_time_bound := (true,true); ti_code := 0; set_current_time_set ((FunctionFormula.Number 1.0),(FunctionFormula.Number 1.0)) )
# 829 "Sources/parser.ml"
               : 'operator_strips_cont_eff))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'function_formula) in
    Obj.repr(
# 137 "Sources/parser.mly"
                            ( set_action_relative_end_time _2 )
# 836 "Sources/parser.ml"
               : 'duration))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'function_formula) in
    Obj.repr(
# 138 "Sources/parser.mly"
                                            ( set_action_relative_end_time _5 )
# 844 "Sources/parser.ml"
               : 'duration))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 141 "Sources/parser.mly"
         ( FunctionFormula.Number _1 )
# 851 "Sources/parser.ml"
               : 'function_formula))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'function_formula) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'function_formula) in
    Obj.repr(
# 142 "Sources/parser.mly"
                                              ( FunctionFormula.Add (_3,_4) )
# 859 "Sources/parser.ml"
               : 'function_formula))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'function_formula) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'function_formula) in
    Obj.repr(
# 143 "Sources/parser.mly"
                                               ( FunctionFormula.Sub (_3,_4) )
# 867 "Sources/parser.ml"
               : 'function_formula))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'function_formula) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'function_formula) in
    Obj.repr(
# 144 "Sources/parser.mly"
                                                   ( FunctionFormula.Multiply (_3,_4) )
# 875 "Sources/parser.ml"
               : 'function_formula))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'function_formula) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'function_formula) in
    Obj.repr(
# 145 "Sources/parser.mly"
                                                 ( FunctionFormula.Divide (_3,_4) )
# 883 "Sources/parser.ml"
               : 'function_formula))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'typed_variable_list) in
    Obj.repr(
# 146 "Sources/parser.mly"
                               ( FunctionFormula.Funct (create_preatom _2 _3 ((FunctionFormula.Number 0.0),(FunctionFormula.Number 0.0))) )
# 891 "Sources/parser.ml"
               : 'function_formula))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'variable_list) in
    Obj.repr(
# 147 "Sources/parser.mly"
                         ( FunctionFormula.Funct (create_preatom _2 _3 ((FunctionFormula.Number 0.0),(FunctionFormula.Number 0.0))) )
# 899 "Sources/parser.ml"
               : 'function_formula))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 151 "Sources/parser.mly"
                  ( _2 )
# 906 "Sources/parser.ml"
               : 'quality))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 10 : string) in
    let _9 = (Parsing.peek_val __caml_parser_env 6 : string) in
    let _13 = (Parsing.peek_val __caml_parser_env 2 : 'typed_constant_list) in
    let _14 = (Parsing.peek_val __caml_parser_env 1 : 'init_definition) in
    let _15 = (Parsing.peek_val __caml_parser_env 0 : 'goal_definition) in
    Obj.repr(
# 158 "Sources/parser.mly"
                      ( create_problem _5 _9 (!constants_in_domain @ _13) _14 _15 )
# 917 "Sources/parser.ml"
               : Domain.problem))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 10 : string) in
    let _9 = (Parsing.peek_val __caml_parser_env 6 : string) in
    let _13 = (Parsing.peek_val __caml_parser_env 2 : 'constant_list) in
    let _14 = (Parsing.peek_val __caml_parser_env 1 : 'init_definition) in
    let _15 = (Parsing.peek_val __caml_parser_env 0 : 'goal_definition) in
    Obj.repr(
# 163 "Sources/parser.mly"
                      ( create_problem _5 _9 (!constants_in_domain @ _13) _14 _15 )
# 928 "Sources/parser.ml"
               : Domain.problem))
; (fun __caml_parser_env ->
    let _5 = (Parsing.peek_val __caml_parser_env 7 : string) in
    let _9 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _11 = (Parsing.peek_val __caml_parser_env 1 : 'init_definition) in
    let _12 = (Parsing.peek_val __caml_parser_env 0 : 'goal_definition) in
    Obj.repr(
# 167 "Sources/parser.mly"
                      ( create_problem _5 _9 [] _11 _12 )
# 938 "Sources/parser.ml"
               : Domain.problem))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'atom_list) in
    Obj.repr(
# 170 "Sources/parser.mly"
                    ( _3 )
# 945 "Sources/parser.ml"
               : 'init_definition))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'mixed_atom_list) in
    Obj.repr(
# 171 "Sources/parser.mly"
                          ( _3 )
# 952 "Sources/parser.ml"
               : 'init_definition))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'formula) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'metric) in
    Obj.repr(
# 174 "Sources/parser.mly"
                            ( _3 )
# 960 "Sources/parser.ml"
               : 'goal_definition))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'timed_formula) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'metric) in
    Obj.repr(
# 175 "Sources/parser.mly"
                                   ( _3 )
# 968 "Sources/parser.ml"
               : 'goal_definition))
; (fun __caml_parser_env ->
    Obj.repr(
# 178 "Sources/parser.mly"
     ( )
# 974 "Sources/parser.ml"
               : 'metric))
; (fun __caml_parser_env ->
    Obj.repr(
# 179 "Sources/parser.mly"
                                        ( )
# 980 "Sources/parser.ml"
               : 'metric))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'formula_list) in
    Obj.repr(
# 182 "Sources/parser.mly"
                      ( Formula.Conjunct (Array.of_list _3) )
# 987 "Sources/parser.ml"
               : 'formula))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'time_set) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'timed_formula_list) in
    Obj.repr(
# 183 "Sources/parser.mly"
                                           ( Formula.Conjunct (Array.of_list _5) )
# 995 "Sources/parser.ml"
               : 'formula))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 6 : 'time_set) in
    let _6 = (Parsing.peek_val __caml_parser_env 2 : 'atom) in
    Obj.repr(
# 184 "Sources/parser.mly"
                                   ( Formula.NegLit _6 )
# 1003 "Sources/parser.ml"
               : 'formula))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'atom) in
    Obj.repr(
# 185 "Sources/parser.mly"
                    ( Formula.NegLit _4 )
# 1010 "Sources/parser.ml"
               : 'formula))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : 'time_set) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'atom) in
    Obj.repr(
# 186 "Sources/parser.mly"
                         ( Formula.PosLit _4 )
# 1018 "Sources/parser.ml"
               : 'formula))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'atom) in
    Obj.repr(
# 187 "Sources/parser.mly"
          ( Formula.PosLit _2 )
# 1025 "Sources/parser.ml"
               : 'formula))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'conditional_effect) in
    Obj.repr(
# 188 "Sources/parser.mly"
                                ( Formula.When _4 )
# 1032 "Sources/parser.ml"
               : 'formula))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'typed_variable_list) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'formula) in
    Obj.repr(
# 189 "Sources/parser.mly"
                                           ( Formula.Forall (_4,_5) )
# 1040 "Sources/parser.ml"
               : 'formula))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : 'atom) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'atom) in
    Obj.repr(
# 192 "Sources/parser.mly"
                  ( (Formula.PosLit _1, Formula.PosLit _3) )
# 1048 "Sources/parser.ml"
               : 'conditional_effect))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 6 : 'atom) in
    let _5 = (Parsing.peek_val __caml_parser_env 2 : 'atom) in
    Obj.repr(
# 193 "Sources/parser.mly"
                            ( (Formula.PosLit _1, Formula.NegLit _5) )
# 1056 "Sources/parser.ml"
               : 'conditional_effect))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 4 : 'atom) in
    let _6 = (Parsing.peek_val __caml_parser_env 1 : 'atom) in
    Obj.repr(
# 194 "Sources/parser.mly"
                            ( (Formula.NegLit _3, Formula.PosLit _6) )
# 1064 "Sources/parser.ml"
               : 'conditional_effect))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 7 : 'atom) in
    let _8 = (Parsing.peek_val __caml_parser_env 2 : 'atom) in
    Obj.repr(
# 195 "Sources/parser.mly"
                                      ( (Formula.NegLit _3, Formula.NegLit _8) )
# 1072 "Sources/parser.ml"
               : 'conditional_effect))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 9 : 'time_set) in
    let _3 = (Parsing.peek_val __caml_parser_env 7 : 'atom) in
    let _6 = (Parsing.peek_val __caml_parser_env 4 : 'time_set) in
    let _8 = (Parsing.peek_val __caml_parser_env 2 : 'atom) in
    Obj.repr(
# 196 "Sources/parser.mly"
                                                ( (Formula.PosLit _3, Formula.PosLit _8) )
# 1082 "Sources/parser.ml"
               : 'conditional_effect))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 12 : 'time_set) in
    let _3 = (Parsing.peek_val __caml_parser_env 10 : 'atom) in
    let _6 = (Parsing.peek_val __caml_parser_env 7 : 'time_set) in
    let _10 = (Parsing.peek_val __caml_parser_env 3 : 'atom) in
    Obj.repr(
# 197 "Sources/parser.mly"
                                                          ( (Formula.PosLit _3, Formula.NegLit _10) )
# 1092 "Sources/parser.ml"
               : 'conditional_effect))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 12 : 'time_set) in
    let _5 = (Parsing.peek_val __caml_parser_env 8 : 'atom) in
    let _9 = (Parsing.peek_val __caml_parser_env 4 : 'time_set) in
    let _11 = (Parsing.peek_val __caml_parser_env 2 : 'atom) in
    Obj.repr(
# 198 "Sources/parser.mly"
                                                          ( (Formula.NegLit _5, Formula.PosLit _11) )
# 1102 "Sources/parser.ml"
               : 'conditional_effect))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 15 : 'time_set) in
    let _5 = (Parsing.peek_val __caml_parser_env 11 : 'atom) in
    let _9 = (Parsing.peek_val __caml_parser_env 7 : 'time_set) in
    let _13 = (Parsing.peek_val __caml_parser_env 3 : 'atom) in
    Obj.repr(
# 199 "Sources/parser.mly"
                                                                    ( (Formula.NegLit _5, Formula.NegLit _13) )
# 1112 "Sources/parser.ml"
               : 'conditional_effect))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'timed_formula_list) in
    Obj.repr(
# 203 "Sources/parser.mly"
                            ( Formula.Conjunct (Array.of_list _3) )
# 1119 "Sources/parser.ml"
               : 'timed_formula))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'atom) in
    Obj.repr(
# 204 "Sources/parser.mly"
                    ( Formula.NegLit _4 )
# 1126 "Sources/parser.ml"
               : 'timed_formula))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'atom) in
    Obj.repr(
# 205 "Sources/parser.mly"
          ( Formula.PosLit _2 )
# 1133 "Sources/parser.ml"
               : 'timed_formula))
; (fun __caml_parser_env ->
    Obj.repr(
# 209 "Sources/parser.mly"
     ( [] )
# 1139 "Sources/parser.ml"
               : 'formula_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'formula) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'formula_list) in
    Obj.repr(
# 210 "Sources/parser.mly"
                       ( _1 :: _2 )
# 1147 "Sources/parser.ml"
               : 'formula_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 214 "Sources/parser.mly"
     ( [] )
# 1153 "Sources/parser.ml"
               : 'timed_formula_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'timed_formula) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'timed_formula_list) in
    Obj.repr(
# 215 "Sources/parser.mly"
                                   ( _1 :: _2 )
# 1161 "Sources/parser.ml"
               : 'timed_formula_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 219 "Sources/parser.mly"
     ( [] )
# 1167 "Sources/parser.ml"
               : 'atom_list))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'atom) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'atom_list) in
    Obj.repr(
# 220 "Sources/parser.mly"
                    ( _2 :: _3 )
# 1175 "Sources/parser.ml"
               : 'atom_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 224 "Sources/parser.mly"
     ( [] )
# 1181 "Sources/parser.ml"
               : 'timed_atom_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'timed_atom) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'timed_atom_list) in
    Obj.repr(
# 225 "Sources/parser.mly"
                             ( _1 :: _2 )
# 1189 "Sources/parser.ml"
               : 'timed_atom_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 229 "Sources/parser.mly"
     ( [] )
# 1195 "Sources/parser.ml"
               : 'mixed_atom_list))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'atom) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'mixed_atom_list) in
    Obj.repr(
# 230 "Sources/parser.mly"
                          ( _2 :: _3 )
# 1203 "Sources/parser.ml"
               : 'mixed_atom_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'timed_atom) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'mixed_atom_list) in
    Obj.repr(
# 231 "Sources/parser.mly"
                             ( _1 :: _2 )
# 1211 "Sources/parser.ml"
               : 'mixed_atom_list))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 3 : 'atom) in
    let _5 = (Parsing.peek_val __caml_parser_env 2 : 'number) in
    let _7 = (Parsing.peek_val __caml_parser_env 0 : 'mixed_atom_list) in
    Obj.repr(
# 232 "Sources/parser.mly"
                                             ( functions_value_list := (_4,_5) :: !functions_value_list; _7 )
# 1220 "Sources/parser.ml"
               : 'mixed_atom_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'term_list) in
    Obj.repr(
# 236 "Sources/parser.mly"
                   ( create_atom _1 _2 !current_time_set )
# 1228 "Sources/parser.ml"
               : 'atom))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'term_list) in
    Obj.repr(
# 237 "Sources/parser.mly"
                   ( create_atom "=" _2 !current_time_set )
# 1235 "Sources/parser.ml"
               : 'atom))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'term_list) in
    Obj.repr(
# 238 "Sources/parser.mly"
               ( create_atom "at" _2 !current_time_set )
# 1242 "Sources/parser.ml"
               : 'atom))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'funct) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : int) in
    Obj.repr(
# 239 "Sources/parser.mly"
                                ( create_atom (fst _4) (snd _4) !current_time_set )
# 1250 "Sources/parser.ml"
               : 'atom))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'funct) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : int) in
    Obj.repr(
# 240 "Sources/parser.mly"
                                ( create_atom (fst _4) (snd _4) !current_time_set )
# 1258 "Sources/parser.ml"
               : 'atom))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'funct) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int) in
    Obj.repr(
# 241 "Sources/parser.mly"
                          ( create_atom (fst _3) (snd _3) !current_time_set )
# 1266 "Sources/parser.ml"
               : 'atom))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'funct) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int) in
    Obj.repr(
# 242 "Sources/parser.mly"
                          ( create_atom (fst _3) (snd _3) !current_time_set )
# 1274 "Sources/parser.ml"
               : 'atom))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'funct) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int) in
    Obj.repr(
# 243 "Sources/parser.mly"
                             ( create_atom (fst _3) (snd _3) !current_time_set )
# 1282 "Sources/parser.ml"
               : 'atom))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'funct) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int) in
    Obj.repr(
# 244 "Sources/parser.mly"
                               ( create_atom (fst _3) (snd _3) !current_time_set )
# 1290 "Sources/parser.ml"
               : 'atom))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'funct) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int) in
    Obj.repr(
# 245 "Sources/parser.mly"
                               ( create_atom (fst _3) (snd _3) !current_time_set )
# 1298 "Sources/parser.ml"
               : 'atom))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : 'time_set) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'atom) in
    Obj.repr(
# 249 "Sources/parser.mly"
                         ( _4 )
# 1306 "Sources/parser.ml"
               : 'timed_atom))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'time_set) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'produced_timed_atom) in
    Obj.repr(
# 250 "Sources/parser.mly"
                                     ( _3 )
# 1314 "Sources/parser.ml"
               : 'timed_atom))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'time_set) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'consumed_timed_atom) in
    Obj.repr(
# 251 "Sources/parser.mly"
                                     ( _3 )
# 1322 "Sources/parser.ml"
               : 'timed_atom))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'atom) in
    Obj.repr(
# 255 "Sources/parser.mly"
                        ( ti_code := 10; _4 )
# 1329 "Sources/parser.ml"
               : 'produced_timed_atom))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'atom) in
    Obj.repr(
# 258 "Sources/parser.mly"
                        ( ti_code := 10; _4 )
# 1336 "Sources/parser.ml"
               : 'consumed_timed_atom))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'timepoint) in
    Obj.repr(
# 261 "Sources/parser.mly"
               ( current_time_bound := (true,true); ti_code := 0; set_current_time_set (_2,_2) )
# 1343 "Sources/parser.ml"
               : 'time_set))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'timepoint) in
    Obj.repr(
# 262 "Sources/parser.mly"
                   ( current_time_bound := (true,false); ti_code := 0; set_current_time_set (_2,_2) )
# 1350 "Sources/parser.ml"
               : 'time_set))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'timepoint) in
    Obj.repr(
# 263 "Sources/parser.mly"
                  ( current_time_bound := (false,true); ti_code := 0; set_current_time_set (_2,_2) )
# 1357 "Sources/parser.ml"
               : 'time_set))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'time_interval) in
    Obj.repr(
# 264 "Sources/parser.mly"
                     ( ti_code := 0; set_current_time_set _2 )
# 1364 "Sources/parser.ml"
               : 'time_set))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'time_interval) in
    Obj.repr(
# 265 "Sources/parser.mly"
                          ( ti_code := 1; set_current_time_set _2 )
# 1371 "Sources/parser.ml"
               : 'time_set))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'time_interval) in
    Obj.repr(
# 266 "Sources/parser.mly"
                         ( ti_code := 2; ti_min_dur := 0.0; set_current_time_set _2 )
# 1378 "Sources/parser.ml"
               : 'time_set))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'number) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'time_interval) in
    Obj.repr(
# 267 "Sources/parser.mly"
                                        ( ti_code := 2; ti_min_dur := _2; set_current_time_set _4 )
# 1386 "Sources/parser.ml"
               : 'time_set))
; (fun __caml_parser_env ->
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'time_interval) in
    Obj.repr(
# 268 "Sources/parser.mly"
                              ( ti_code := 10; set_current_time_set _4 )
# 1393 "Sources/parser.ml"
               : 'time_set))
; (fun __caml_parser_env ->
    Obj.repr(
# 271 "Sources/parser.mly"
        ( (FunctionFormula.Number 0.0) )
# 1399 "Sources/parser.ml"
               : 'timepoint))
; (fun __caml_parser_env ->
    Obj.repr(
# 272 "Sources/parser.mly"
      ( !action_relative_end_time )
# 1405 "Sources/parser.ml"
               : 'timepoint))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'number) in
    Obj.repr(
# 273 "Sources/parser.mly"
         ( (FunctionFormula.Number _1) )
# 1412 "Sources/parser.ml"
               : 'timepoint))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'timepoint) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'timepoint) in
    Obj.repr(
# 274 "Sources/parser.mly"
                                ( FunctionFormula.Add (_3,_4) )
# 1420 "Sources/parser.ml"
               : 'timepoint))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'timepoint) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'timepoint) in
    Obj.repr(
# 275 "Sources/parser.mly"
                                 ( FunctionFormula.Sub (_3,_4) )
# 1428 "Sources/parser.ml"
               : 'timepoint))
; (fun __caml_parser_env ->
    Obj.repr(
# 278 "Sources/parser.mly"
      ( current_time_bound := (true,false); ((FunctionFormula.Number 0.0),!action_relative_end_time) )
# 1434 "Sources/parser.ml"
               : 'time_interval))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'timepoint) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'timepoint) in
    Obj.repr(
# 279 "Sources/parser.mly"
                            ( current_time_bound := (true,true); (_2,_3) )
# 1442 "Sources/parser.ml"
               : 'time_interval))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'timepoint) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'timepoint) in
    Obj.repr(
# 280 "Sources/parser.mly"
                            ( current_time_bound := (true,false); (_2,_3) )
# 1450 "Sources/parser.ml"
               : 'time_interval))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'timepoint) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'timepoint) in
    Obj.repr(
# 281 "Sources/parser.mly"
                            ( current_time_bound := (false,true); (_2,_3) )
# 1458 "Sources/parser.ml"
               : 'time_interval))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'timepoint) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'timepoint) in
    Obj.repr(
# 282 "Sources/parser.mly"
                            ( current_time_bound := (false,false); (_2,_3) )
# 1466 "Sources/parser.ml"
               : 'time_interval))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'types_aux2) in
    Obj.repr(
# 286 "Sources/parser.mly"
             ( )
# 1473 "Sources/parser.ml"
               : 'types))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'types_aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'types) in
    Obj.repr(
# 287 "Sources/parser.mly"
                        (
    let ptype = symb_set#create_predicate _2 in
      List.iter (fun p -> p#add_builtin_type ptype) _1 )
# 1484 "Sources/parser.ml"
               : 'types))
; (fun __caml_parser_env ->
    Obj.repr(
# 292 "Sources/parser.mly"
       ( [] )
# 1490 "Sources/parser.ml"
               : 'types_aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'types_aux) in
    Obj.repr(
# 293 "Sources/parser.mly"
                  ( symb_set#create_predicate _1 :: _2 )
# 1498 "Sources/parser.ml"
               : 'types_aux))
; (fun __caml_parser_env ->
    Obj.repr(
# 296 "Sources/parser.mly"
     ( )
# 1504 "Sources/parser.ml"
               : 'types_aux2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'types_aux2) in
    Obj.repr(
# 297 "Sources/parser.mly"
                   ( )
# 1512 "Sources/parser.ml"
               : 'types_aux2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'typed_constant_list_aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : string) in
    Obj.repr(
# 301 "Sources/parser.mly"
                                    ( create_typed_term_list _1 _2 )
# 1520 "Sources/parser.ml"
               : 'typed_constant_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'typed_constant_list_aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'typed_constant_list) in
    Obj.repr(
# 302 "Sources/parser.mly"
                                                     ( create_typed_term_list _1 _2 @ _3 )
# 1529 "Sources/parser.ml"
               : 'typed_constant_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 305 "Sources/parser.mly"
       ( [] )
# 1535 "Sources/parser.ml"
               : 'typed_constant_list_aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'constant) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'typed_constant_list_aux) in
    Obj.repr(
# 306 "Sources/parser.mly"
                                   ( _1 :: _2 )
# 1543 "Sources/parser.ml"
               : 'typed_constant_list_aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'typed_variable_list_aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : string) in
    Obj.repr(
# 310 "Sources/parser.mly"
                                   ( create_typed_term_list _1 _2 )
# 1551 "Sources/parser.ml"
               : 'typed_variable_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'typed_variable_list_aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'typed_variable_list) in
    Obj.repr(
# 311 "Sources/parser.mly"
                                                    ( create_typed_term_list _1 _2 @ _3 )
# 1560 "Sources/parser.ml"
               : 'typed_variable_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 314 "Sources/parser.mly"
       ( [] )
# 1566 "Sources/parser.ml"
               : 'typed_variable_list_aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'variable) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'typed_variable_list_aux) in
    Obj.repr(
# 315 "Sources/parser.mly"
                                   ( _1 :: _2 )
# 1574 "Sources/parser.ml"
               : 'typed_variable_list_aux))
; (fun __caml_parser_env ->
    Obj.repr(
# 319 "Sources/parser.mly"
     ( [] )
# 1580 "Sources/parser.ml"
               : 'functions_list))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'funct) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'functions_list) in
    Obj.repr(
# 320 "Sources/parser.mly"
                          ( _2 :: _3 )
# 1588 "Sources/parser.ml"
               : 'functions_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'typed_variable_list) in
    Obj.repr(
# 324 "Sources/parser.mly"
                            ( create_function _1 _2 )
# 1596 "Sources/parser.ml"
               : 'funct))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'variable_list) in
    Obj.repr(
# 325 "Sources/parser.mly"
                      ( create_function _1 _2 )
# 1604 "Sources/parser.ml"
               : 'funct))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'typed_constant_list) in
    Obj.repr(
# 329 "Sources/parser.mly"
                            ( create_function _1 _2 )
# 1612 "Sources/parser.ml"
               : 'instanciated_funct))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'constant_list) in
    Obj.repr(
# 330 "Sources/parser.mly"
                      ( create_function _1 _2 )
# 1620 "Sources/parser.ml"
               : 'instanciated_funct))
; (fun __caml_parser_env ->
    Obj.repr(
# 334 "Sources/parser.mly"
     ( [] )
# 1626 "Sources/parser.ml"
               : 'term_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'term) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'term_list) in
    Obj.repr(
# 335 "Sources/parser.mly"
                 ( _1 :: _2 )
# 1634 "Sources/parser.ml"
               : 'term_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 338 "Sources/parser.mly"
     ( [] )
# 1640 "Sources/parser.ml"
               : 'variable_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'variable) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'variable_list) in
    Obj.repr(
# 339 "Sources/parser.mly"
                         ( _1 :: _2 )
# 1648 "Sources/parser.ml"
               : 'variable_list))
; (fun __caml_parser_env ->
    Obj.repr(
# 342 "Sources/parser.mly"
     ( [] )
# 1654 "Sources/parser.ml"
               : 'constant_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'constant) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'constant_list) in
    Obj.repr(
# 343 "Sources/parser.mly"
                         ( _1 :: _2 )
# 1662 "Sources/parser.ml"
               : 'constant_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 346 "Sources/parser.mly"
      ( symb_set#create_variable _1 )
# 1669 "Sources/parser.ml"
               : 'term))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 347 "Sources/parser.mly"
        ( symb_set#create_constant _1 )
# 1676 "Sources/parser.ml"
               : 'term))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 348 "Sources/parser.mly"
          ( symb_set#create_constant (string_of_int _1) )
# 1683 "Sources/parser.ml"
               : 'term))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 351 "Sources/parser.mly"
      ( symb_set#create_variable _1 )
# 1690 "Sources/parser.ml"
               : 'variable))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 354 "Sources/parser.mly"
        ( symb_set#create_constant _1 )
# 1697 "Sources/parser.ml"
               : 'constant))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 355 "Sources/parser.mly"
          ( symb_set#create_constant (string_of_int _1) )
# 1704 "Sources/parser.ml"
               : 'constant))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 358 "Sources/parser.mly"
          ( float_of_int _1 )
# 1711 "Sources/parser.ml"
               : 'number))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : float) in
    Obj.repr(
# 359 "Sources/parser.mly"
           ( _1 )
# 1718 "Sources/parser.ml"
               : 'number))
(* Entry domain *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
(* Entry problem *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let domain (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : Domain.domain)
let problem (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 2 lexfun lexbuf : Domain.problem)
